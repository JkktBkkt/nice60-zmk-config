/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    macros {
        shrug: shrug {
            label = "shrug";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
	    wait-ms = <10>;
            bindings
                = <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp A &kp F>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 5 &kp C>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 5 &kp F>
		, <&macro_tap &kp LA(X)> 
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 2 &kp 8>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 3 &kp 0 &kp C &kp 4>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 2 &kp 9>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 5 &kp F>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp 2 &kp F>
		, <&macro_tap &kp LA(X)>
		, <&macro_tap &kp U &kp PLUS>
                , <&macro_tap &kp 0 &kp 0 &kp A &kp F>
		, <&macro_tap &kp LA(X)>
                ;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// |   ~   |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  WIN  |  ALT  |            SPACE              |  MO(1)  |  MO(1)  |  ALT | CTL |
// ------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL  &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSLH
	&kp GRAVE  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT           &kp RET
	&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH           &kp RSHFT
	&kp LCTRL &kp LGUI &kp LALT             &kp SPACE                       &mo 1  &mo 1  &kp RALT   &kp RCTRL
			>;
		};

		rgb_layer {
// ------------------------------------------------------------------------------------------------
// | BT CLR | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |     DEL           |
// |NEXT HOST| PRV |PAUSE|NEXT|RND|     |     |     |  UP   |     | Alt+PRTSCR |     |     |¯\_(ツ)_/¯   |
// | PRV HOST  | vUP |nUP| nDWN |MUTE| HOME |  LT   |  DN   |  RT   |      |      | SHRG |               |
// |    SHIFT     | vDWN |      |      | END  |     |     |      |      |      |  UPD  |                 |
// |   CTRL  |      |      |                                   | TOG |  TOG  |  PRTSCR  |                |
// ------------------------------------------------------------------------------------------------
// PRV,PAUSE,NEXT,RND,UP,DWN = Foobar2000 binds, replace with C_PREV, C_PLAY_PAUSE, C_NEXT, C_SHUFFLE for native control
// TODO: clear connection on switch from BT2 (there is a WIP PR by zmk dev for this), numpad symbols - this will be edited by mod-morph changes, so no point doing now
			bindings = <
	&bt BT_CLR   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5  &kp F6  &kp F7   &kp F8    &kp F9   &kp F10   &kp F11   &kp F12     &kp DEL
	&bt BT_NXT &kp LC(F14) &kp LC(F15) &kp LC(F16) &kp LC(F10) &trans  &trans   &trans  &kp UP   &trans &kp LA(PSCRN)   &trans  &trans  &shrug 
	&bt BT_PRV  &kp LC(F11) &kp K_VOL_UP &kp K_VOL_DN &kp C_MUTE &trans &kp HOME   &kp LEFT &kp DOWN &kp RIGHT        &trans  &trans    &trans          
	&trans       &kp LC(F12)  &trans    &trans     &trans   &trans &kp END &trans &trans       &trans   &bootloader             &trans
	&trans     &trans   &trans                             &trans                             &trans   &trans &kp PSCRN        &kp INSERT
			>;
		};
	};
};
